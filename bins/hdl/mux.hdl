chip mux (s: 1, a: 1, b: 1) -> (1) {
    out or(
        in: [
            and(in: [a, not(in: s)]),
            and(in: [b, s])
        ]
    )
}

chip mux_2 (s: 1, a: 16, b: 16) -> (16) {
    out or_16(
        a: and_16_to_1(a: a, b: not(in: s)),
        b: and_16_to_1(a: b, b: s)
    )
}

chip dmux_2 (s: 1, in: 16) -> (16, 16) {
    out and_16_to_1(a: in, b: not(in: s))
    out and_16_to_1(a: in, b: s)
}

chip mux_4 (s: 2, a: 16, b: 16, c: 16, d: 16) -> (16) {
    out mux_2(
        s: s.0,
        a: mux_2(s: s.1, a: a, b: b),
        b: mux_2(s: s.1, a: c, b: d)
    )
}

chip dmux_4 (s: 2, in: 16) -> (16, 16, 16, 16) {
    set a, b = dmux_2(s: s.1, in: in)
    out and_16_to_1(a: a, b: not(in: s.0))
    out and_16_to_1(a: b, b: not(in: s.0))

    set c, d = dmux_2(s: s.1, in: in)
    out and_16_to_1(a: c, b: s.0)
    out and_16_to_1(a: d, b: s.0)
}

chip mux_8 (s: 3, a: 16, b: 16, c: 16, d: 16, e: 16, f: 16, g: 16, h: 16) -> (16) {
    out mux_2(
        s: s.0,
        a: mux_4(s: [s.1, s.2], a: a, b: b, c: c, d: d),
        b: mux_4(s: [s.1, s.2], a: e, b: f, c: g, d: h)
    )
}