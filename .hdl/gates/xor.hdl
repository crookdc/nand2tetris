use "or.hdl"
use "and.hdl"
use "not.hdl"

chip xor (in: 2) -> (1) {
    out or(in: [and(in: [in.0, not(in: in.1)]), and(in: [not(in: in.0), in.1])])
}

chip xor_16 (a: 16, b: 16) -> (16) {
	out [
		xor(in: [a.0, b.0]),
		xor(in: [a.1, b.1]),
		xor(in: [a.2, b.2]),
		xor(in: [a.3, b.3]),
		xor(in: [a.4, b.4]),
		xor(in: [a.5, b.5]),
		xor(in: [a.6, b.6]),
		xor(in: [a.7, b.7]),
		xor(in: [a.8, b.8]),
		xor(in: [a.9, b.9]),
		xor(in: [a.10, b.10]),
		xor(in: [a.11, b.11]),
		xor(in: [a.12, b.12]),
		xor(in: [a.13, b.13]),
		xor(in: [a.14, b.14]),
	    xor(in: [a.15, b.15])
    ]
}

chip xor_16_to_1 (a: 16, b: 1) -> (16) {
	out [
		xor(in: [a.0, b]),
		xor(in: [a.1, b]),
		xor(in: [a.2, b]),
		xor(in: [a.3, b]),
		xor(in: [a.4, b]),
		xor(in: [a.5, b]),
		xor(in: [a.6, b]),
		xor(in: [a.7, b]),
		xor(in: [a.8, b]),
		xor(in: [a.9, b]),
		xor(in: [a.10, b]),
		xor(in: [a.11, b]),
		xor(in: [a.12, b]),
		xor(in: [a.13, b]),
		xor(in: [a.14, b]),
	    xor(in: [a.15, b])
    ]
}